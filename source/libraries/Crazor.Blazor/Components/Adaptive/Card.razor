@using AdaptiveCards;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Rendering;
@using System.ComponentModel;
@inherits TypedElementComponent<AdaptiveCard>

<ac:Card xmlns="@AdaptiveCard.ContentType" xmlns:ac="@AdaptiveCard.ContentType" @attributes="@GetAttributes()">
    <CascadingValue Name="ParentItem" Value="@Item">
        @ChildContent
    </CascadingValue>
</ac:Card>

@code {
    [Parameter]
    public String? FallbackText { get; set; }

    [Parameter]
    public String? Lang { get; set; }

    [Parameter]
    public String? MinHeight { get; set; }

    [Parameter]
    public BoolProperty? Rtl { get; set; }

    [Parameter]
    public String? Speak { get; set; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveContainerStyle), "Default")]
    public AdaptiveContainerStyle Style { get; set; }

    [Parameter]
    public String? Title { get; set; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveVerticalContentAlignment), "Top")]
    public AdaptiveVerticalContentAlignment VerticalContentAlignment { get; set; }

    [Parameter]
    public String? Height { get; set; }

    [Parameter]
    public String? Version { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (ParentItem is AdaptiveShowCardAction action)
        {
            action.Card = Item;
        }
    }
    }
