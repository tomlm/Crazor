@using Crazor
@using Microsoft.AspNetCore.Components;
@using System.ComponentModel;
@inherits ActionComponent<AdaptiveOpenUrlAction>

<ac:Action.OpenUrl @attributes="@GetAttributes()">
    <CascadingValue Name="ParentItem" Value="@Item">@ChildContent</CascadingValue>
</ac:Action.OpenUrl>

@code
{

    [Parameter]
    public String? IconUrl { get => Item.IconUrl; set => Item.IconUrl = value!; }

    [Parameter]
    public BoolProperty? IsEnabled { get => Item.IsEnabled; set => Item.IsEnabled = value == true; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveActionMode), "Primary")]
    public AdaptiveActionMode Mode { get => Item.Mode; set => Item.Mode = value; }

    [Parameter]
    [DefaultValue(typeof(string), "Default")]
    public string Style { get => Item.Style; set => Item.Style = value; }

    [Parameter]
    public String? Title { get => Item.Title; set => Item.Title = value!; }

    [Parameter]
    public String? Tooltip { get => Item.Tooltip; set => Item.Tooltip = value!; }

    [Parameter]
    public String? Url { get => Item.Url?.ToString(); set => Item.Url = Uri.TryCreate(value, UriKind.RelativeOrAbsolute, out var val) ? val : null!; }
}
