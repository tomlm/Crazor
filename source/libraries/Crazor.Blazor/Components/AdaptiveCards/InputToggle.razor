@using global::AdaptiveCards
@using Crazor.Attributes;
@using Microsoft.AspNetCore.Components;
@using System.ComponentModel;
@inherits Input<AdaptiveToggleInput>

<ac:Input.Toggle @attributes="@GetAttributes()">
    <CascadingValue Name="ParentModel" Value="@Model">@ChildContent</CascadingValue>
</ac:Input.Toggle>
@if (ShowErrors == null || ShowErrors.Value == true)
{
    <ValidationErrors Id="@(Binding ?? Id)" />
}

@code
{
    [Parameter]
    public Boolean? IsVisible { get => Model.IsVisible; set => Model.IsVisible = value ?? true; }

    [Parameter]
    public Boolean? Separator { get => Model.Separator; set => Model.Separator = value ?? false; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveSpacing), "Default")]
    public AdaptiveSpacing Spacing { get => Model.Spacing; set => Model.Spacing = value; }

    [Parameter]
    public String Title { get => Model.Title ?? Model.Label; set => Model.Title = value; }

    [Parameter]
    [Binding(BindingType.Value)]
    public String Value { get => Model.Value; set => Model.Value = value; }

    [Parameter]
    public String ValueOff { get => Model.ValueOff; set => Model.ValueOff = value; }

    [Parameter]
    public String ValueOn { get => Model.ValueOn; set => Model.ValueOn = value; }

    [Parameter]
    public Boolean? Wrap { get => Model.Wrap; set => Model.Wrap = value ?? false; }

    [Parameter]
    public String Height { get => Model.Height?.ToString(); set => Model.Height = value; }
}
