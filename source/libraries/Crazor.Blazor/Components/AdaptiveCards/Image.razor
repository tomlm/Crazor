@using global::AdaptiveCards
@using Microsoft.AspNetCore.Components;
@using System.ComponentModel;
@inherits ElementComponent<AdaptiveImage>

<ac:Image @attributes="@GetAttributes()">
    <CascadingValue Name="ParentModel" Value="@Model">@ChildContent</CascadingValue>
</ac:Image>

@code
{

    [Parameter]
    public String AltText { get => Model.AltText; set => Model.AltText = value; }

    [Parameter]
    public String BackgroundColor { get => Model.BackgroundColor; set => Model.BackgroundColor = value; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveHorizontalAlignment), "Left")]
    public AdaptiveHorizontalAlignment HorizontalAlignment { get => Model.HorizontalAlignment; set => Model.HorizontalAlignment = value; }

    [Parameter]
    public Boolean? IsVisible { get => Model.IsVisible; set => Model.IsVisible = value ?? true; }

    [Parameter]
    public Boolean? Separator { get => Model.Separator; set => Model.Separator = value ?? false; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveImageSize), "Auto")]
    public AdaptiveImageSize Size { get => Model.Size; set => Model.Size = value; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveSpacing), "Default")]
    public AdaptiveSpacing Spacing { get => Model.Spacing; set => Model.Spacing = value; }

    [Parameter]
    [DefaultValue(typeof(AdaptiveImageStyle), "Normal")]
    public AdaptiveImageStyle Style { get => Model.Style; set => Model.Style = value; }

    [Parameter]
    public String Url { get => Model.Url; set => Model.Url = value; }

    [Parameter]
    public String Height { get => Model.Height?.ToString(); set => Model.Height = value; }

    [Parameter]
    public String Width { get => Model.Width?.ToString(); set => Model.Width = value; }
}
