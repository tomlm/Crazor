@using Newtonsoft.Json
@using OpBot.Cards.Address2
@using System.ComponentModel
@inherits CardView<Address2App, EditAddressModel>

<Card xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="1.5">
    @if (Model.IsEdit)
    {
        <TextBlock Size="ExtraLarge">Edit Address</TextBlock>
    }
    else
    {
        <TextBlock Size="ExtraLarge">Add Address</TextBlock>
    }

    <Input.Text Binding="Model.Address.Street" IsRequired="false"/>
    <Input.Text Binding="Model.Address.City" />
    <Input.ChoiceSet Binding="Model.Address.State">
        <Choice Title="Alabama" Value="AL" />
        <Choice Title="Arkansas" Value="AR" />
        <Choice Title="Alaska" Value="AK" />
        <Choice Title="California" Value="CA" />
        <Choice Title="Idaho" Value="ID" />
        <Choice Title="Washington" Value="WA" />
        <Choice Title="Iowa" Value="IA" />
        <Choice Title="Oregon" Value="OR" />
    </Input.ChoiceSet>
    <Input.Text Binding="Model.Address.PostalCode" />
    <Input.ChoiceSet Binding="Model.Address.Country">
        <Choice Title="U.S.A." Value="USA" />
        <Choice Title="Canada" Value="CA" />
    </Input.ChoiceSet>

    <Action.Execute Title="Cancel" Verb="OnCancel" AssociatedInputs="None" />
    <Action.Execute Title="Save" Verb="OnSave" />
</Card>

@functions {
    public void OnSave()
    {
        if (this.IsModelValid)
        {
            this.Close(Model);
        }
        else
        {
            // you can process validationErrors by hand, in this case Create Banner Messages for errors.
            foreach(var error in this.ValidationErrors)
            {
                foreach(var message in error.Value)
                {
                    AddBannerMessage(message, AdaptiveContainerStyle.Attention);
                }
            }
        }
    }

    public void OnCancel()
    {
        this.Cancel("No changes made.");
    }
}