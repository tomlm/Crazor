@using OpBot.Cards.ProductCatalog
@using System.Text;
@using System.Net.Http;
@using Newtonsoft.Json;

@inherits CardView<ProductCatalogApp>

<Card xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="1.5">
    <TextBlock Size="extraLarge" Weight="bolder">Product Catalog</TextBlock>

    @if (Model.CatalogItems.Any())
    {
        @foreach (var item in Model.CatalogItems)
        {
                    <Container Separator="true">
                        <ColumnSet Padding="none">
                            <Column Width="stretch" >
                                <TextBlock Size="large" Weight="bolder">@item.Name</TextBlock>
                                <TextBlock Size="medium">@item.Description</TextBlock>
                                <TextBlock Size="medium">Price: $@item.Price</TextBlock>
                                <Image Url="@item.PictureUri"/>
                            </Column>
                            <Column Width="auto" >
                        <Image Url="https://cdn.icon-icons.com/icons2/3399/PNG/512/detail_icon_215012.png" Size="small">
                                    <SelectAction xsi:type="Action.Execute" Id="@item.Id" Tooltip="Detail" Verb="OnDetail" />
                                </Image> 
                            </Column>
                            <Column Width="auto" >
                                    <Image Url="https://cdn.icon-icons.com/icons2/931/PNG/512/edit_modify_icon-icons.com_72390.png" Size="small">
                                    <SelectAction xsi:type="Action.Execute" Id="@item.Id" Tooltip="Edit" Verb="OnEdit" />
                                </Image> 
                            </Column>
                            <Column Width="auto" >
                                    <Image Url="https://cdn.icon-icons.com/icons2/3251/PNG/512/delete_regular_icon_203689.png" Size="small">
                                    <SelectAction xsi:type="Action.Execute" Id="@item.Id" Tooltip="Delete" Verb="OnDelete" />
                                </Image> 
                            </Column>
                        </ColumnSet>
                    </Container>
        }
    }

    <Action.Execute Title="Add Product Item" Verb="OnAdd" />
</Card>

@functions {
    public void OnAdd()
    {
        var item = new ProductCatalogItem();
        ShowCard("Edit", new CreateEditProductCatalogModel { IsEdit = false, Item = item });
    }

    public void OnDetail(string id)
    {
        var item = Model.CatalogItems.SingleOrDefault(a => a.Id == int.Parse(id));
        if (item != null)
        {
            ShowCard("Detail", new DetailProductCatalogModel() { Item = item });
        }
    }

    public void OnEdit(string id)
    {
        var item = Model.CatalogItems.SingleOrDefault(a => a.Id == int.Parse(id));
        if (item != null)
        {
            ShowCard("Edit", new CreateEditProductCatalogModel() { IsEdit = true, Item = item });
        }
    }

    public void OnDelete(string id)
    {
        Model.CatalogItems = Model.CatalogItems.Where(a => a.Id != int.Parse(id)).ToList();
    }

    public async Task OnEditCompleted(CreateEditProductCatalogModel model)
    {
        if (model.IsEdit)
        {
            var item = Model.CatalogItems.Where(a => a.Id == model.Item.Id).SingleOrDefault();

            if (item != null)
            {
                // Update local copy
                item.Name = model.Item.Name;
                item.Description = model.Item.Description;
                item.Price = model.Item.Price;
                item.PictureUri = model.Item.PictureUri;
                AddBannerMessage("Catalog Item successfully updated!", AdaptiveContainerStyle.Good);

                // Update in API
                var request = "https://ordersapi.azurewebsites.net/api/orders";
                var data = JsonConvert.SerializeObject(item);
                using (var client = new HttpClient())
                {
                    var response = await client.PutAsync(request, new StringContent(data, Encoding.UTF8, "application/json"));
                }
            }
        }
        else
        {
            // Add local copy
            Model.CatalogItems.Add(model.Item);
            AddBannerMessage("Catalog Item successfully added!", AdaptiveContainerStyle.Good);
        
            // Update in API
            var request = "https://ordersapi.azurewebsites.net/api/orders";
            var data = JsonConvert.SerializeObject(model.Item);
            using (var client = new HttpClient())
            {
                var response = await client.PostAsync(request, new StringContent(data, Encoding.UTF8, "application/json"));
            }
        }
    }
}