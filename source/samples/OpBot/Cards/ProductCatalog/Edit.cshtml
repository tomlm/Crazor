@using OpBot.Cards.ProductCatalog
@inherits CardView<CreateEditProductCatalogModel>

<Card xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="1.5">
    

    @if (Model.IsEdit)
    {
        <TextBlock Size="ExtraLarge">Edit Catalog Item</TextBlock>
    }
    else
    {
        <TextBlock Size="ExtraLarge">Add Catalog Item</TextBlock>
    }
    <Input.Text Id="ItemName" Label="Name" Style="Text" ErrorMessage="Name is required." Value="@ItemName" />
    <ValidationErrors Binding="ItemName"/>
    
    <Input.Text Id="Description" Label="Description" Style="Text" ErrorMessage="Description is required" Value="@Description" />
    <ValidationErrors Binding="Description"/>
    
    <Input.Number Id="Price" Label="Price" ErrorMessage="Price is required." Value="@Price" />
    <ValidationErrors Binding="Price"/>

    <Input.Text Id="PictureUri" Label="PictureUri" Style="Text" ErrorMessage="Picture Uri is required." Value="@PictureUri" />
    <ValidationErrors Binding="PictureUri"/>

    <Action.Execute Title="Cancel" Verb="OnCancel" />
    <Action.Execute Title="Save" Verb="OnSave" />
</Card>

@functions {

    [BindProperty]
    [Required]
    [MaxLength(100)]
    public string? ItemName { get; set; }

    [BindProperty]
    [Required]
    [MaxLength(100)]
    public string? Description { get; set; }

    [BindProperty]
    [Required]
    public double Price { get; set; }

    [BindProperty]
    [Required]
    [MaxLength(100)]
    public string? PictureUri { get; set; }

    public void OnInitialize()
    {
        if (Model.Item != null)
        {
            ItemName = Model.Item.Name;
            Description = Model.Item.Description;
            Price = (Double)Model.Item.Price;
            PictureUri = Model.Item.PictureUri;
        }
    }

    public void OnSave()
    {
        if (this.IsModelValid)
        {
            Model.Item.Name = ItemName;
            Model.Item.Description = Description;
            Model.Item.Price = (Decimal)Price;
            Model.Item.PictureUri = PictureUri;

            this.Close(Model);
        }
    }

    public void OnCancel()
    {
        this.Cancel("No Op");
    }
}