@using System.Text;
@using System.Net.Http;
@using Crazor
@using Crazor.Attributes
@using Newtonsoft.Json;
@using OpBot.Cards.WorkOrder;
@using OpBot.Cards.WorkOrderDetails

@inherits CardView<WorkOrderDetailsApp>

<Card Version="1.5">

    <ColumnSet Style="Emphasis">
        <Column>
            <TextBlock Size="Large" Weight="Bolder">@WorkOrder.Name</TextBlock>
            <TextBlock Size="Medium" Weight="Bolder" Color="@WorkOrder.GetStatusColor" Spacing="None">@WorkOrder.SystemStatus.Name</TextBlock>
        </Column>
        <Column>
            @if (WorkOrder.AssignedTo != null)
            {

                <ColumnSet Spacing="None">
                    <Column Width="Auto" VerticalContentAlignment="Center">
                        <Image Size="Small" Url="@WorkOrder.AssignedTo.Photo" />
                    </Column>
                    <Column VerticalContentAlignment="Center">
                        <TextBlock Size="Large">@WorkOrder.AssignedTo.Name</TextBlock>
                        <TextBlock Spacing="None" Size="Medium" IsSubtle="true">@WorkOrder.AssignedTo.Email</TextBlock>
                    </Column>
                </ColumnSet>

            }
            else
            {
                <TextBlock Size="Large" Weight="Bolder">Assigned to</TextBlock>
                <TextBlock Size="Medium" Color="Attention" Weight="Bolder" Spacing="None">Not assigned</TextBlock>
            }
        </Column>
    </ColumnSet>
    <FactSet>
        <Fact Title="Work Order Type:" Value="@WorkOrder.WorkOrderType.Name" />
        <Fact Title="Asset:" Value="@WorkOrder.CustomerAsset.Name" />
        <Fact Title="Summary:" Value="@WorkOrder.Summary" />
        @if (WorkOrder.PromisedBy != null)
        {
            <Fact Title="Promised:" Value="@WorkOrder.PromisedBy.Value.ToString("g")" />
        }
        @if (WorkOrder.StartTime != null)
        {
            <Fact Title="Started:" Value="@WorkOrder.StartTime.Value.ToString("g")" />
        }
        else
        {
            <Fact Title="Started:" Value="Not started" />
        }

        @if (WorkOrder.CompleteTime != null)
        {
            <Fact Title="Completed:" Value="@WorkOrder.CompleteTime.Value.ToString("g")" />
        }
        else
        {
            <Fact Title="Completed:" Value="Not complete" />
        }
    </FactSet>

    <ActionSet>
        <Action.ShowCard Title="Assign to">
            <Card>
                <Input.ChoiceSet Binding="AssignedToUserId" Label="Assign to">
                    @foreach (var person in Person.GetTechnicians())
                    {
                        <Choice Title="@person.Name" Value="@person.Email" />
                    }
                    @*                    <Choices.Data Dataset="graph.microsoft.com/users?scope=currentContext" />*@
                </Input.ChoiceSet>
                <ActionSet>
                    <Action.Execute Verb="AssignTo" Title="Assign to Selected" />
                    <Action.Execute Verb="AssignTo" Title="Assign to Self">
                        {
                        "assignToSelf": "true"
                        }
                    </Action.Execute>
                </ActionSet>
            </Card>
        </Action.ShowCard>
        <Action.ShowCard Title="Sensors">
            <Card>
                <Image Url="https://hackathon2022-cards.azurewebsites.net/img/iot-chart.png" />
            </Card>
        </Action.ShowCard>
        <Action.OpenUrl Title="Open" Url="https://dynamics.microsoft.com/en-us/field-service/overview/" />
    </ActionSet>
</Card>

@functions {
    [SessionMemory]
    public WorkOrder WorkOrder { get; set; }

    [SessionMemory]
    public string Status { get; set; } = "Scheduled";

    [SessionMemory]
    public DateTimeOffset? PromisedBy { get; set; }

    [SessionMemory]
    public DateTimeOffset? StartTime { get; set; }

    [SessionMemory]
    public DateTimeOffset? CompleteTime { get; set; }

    [BindProperty]
    public string AssignedToUserId { get; set; }

    public void AssignTo(bool? assignToSelf) 
    {
        WorkOrder.SystemStatus = new SystemStatus("Scheduled");
        if (assignToSelf == true)
        {
            WorkOrder.AssignTo(Person.DEMO_USER);
        }
        else 
        {
            WorkOrder.AssignTo(AssignedToUserId);
        }
    }

    public void OnInitialized()
    {
        // Silly hack to make sure we always have a work order value
        // for example a direct GET request to the /Details screen
        if (WorkOrder == null || string.IsNullOrEmpty(WorkOrder.Name))
        {
            WorkOrder = WorkOrder.Dummy;
        }
    }
}