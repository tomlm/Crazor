@using CrazorBlazorDemo.Cards.NugetSearch
@using Microsoft.Bot.Schema.Teams
@inherits CardView<NugetApp,NugetPackage>

@* This card rendering a card which is bound to a nuget package PackageId *@
@attribute [CardRoute("packages/{Model.Id}")]
@code
{
    public async Task OnLoadRoute(CancellationToken cancellationToken)
        => this.Model = await App.GetNugetPackage(Model.Id, cancellationToken);
}

<Card Version="1.5">
    <ColumnSet>
        <Column Width="Auto" HorizontalAlignment="AdaptiveHorizontalAlignment.Center">
            <Image Url="@GetIconUrl()" Size="AdaptiveImageSize.Medium" />
        </Column>
        <Column Width="stretch">
            @if (!String.IsNullOrEmpty(Model?.Title))
            {
                <TextBlock Size="AdaptiveTextSize.Large" Weight="AdaptiveTextWeight.Bolder">@Model!.Title</TextBlock>
            }
            @if (!String.IsNullOrEmpty(Model?.Version))
            {
                <TextBlock Size="AdaptiveTextSize.Medium" IsSubtle="true">@Model!.Version</TextBlock>
            }
            <TextBlock Wrap="true" MaxLines="3">@Model!.Description</TextBlock>
        </Column>
    </ColumnSet>

    <ActionOpenUrl Title="Nuget Package" Url="@($"https://www.nuget.org/packages/{Model.Id}")" />
    @if (!String.IsNullOrEmpty(Model.ProjectUrl) && Uri.IsWellFormedUriString(Model.ProjectUrl, UriKind.Absolute))
    {
        <ActionOpenUrl Title="Project " Url="@Model.ProjectUrl" />
    }
</Card>


@code
{
    // return image url or default image url.
    public string GetIconUrl()
    {
        return (!String.IsNullOrEmpty(Model.IconUrl) && Uri.IsWellFormedUriString(Model.IconUrl, UriKind.Absolute))
        ? Model.IconUrl : "https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/nuget/nuget.png";
    }
}