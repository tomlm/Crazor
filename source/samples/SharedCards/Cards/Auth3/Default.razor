@attribute [Authentication]
@inherits CardView
@using Microsoft.Graph;
@inject GraphServiceClient GraphClient;

<CascadingAuthenticationState>
    <Card Version="1.5">
        <AuthorizeView>
            <Authorized>
                <TextBlock>Graph User is: @UserName</TextBlock>
            </Authorized>
            <NotAuthorized>
                <TextBlock>Anonymous</TextBlock>
            </NotAuthorized>
        </AuthorizeView>

        <ActionExecute Verb="OnRefresh" Title="Refresh" />
    </Card>
</CascadingAuthenticationState>

@code
{
    public string UserName { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (User.Identity.IsAuthenticated)
        {
            var result = await GraphClient.Me.Request().GetAsync();
            UserName = result.DisplayName;
        }
        return;
    }

    public async Task OnRefresh()
    {
        if (User.Identity.IsAuthenticated)
        {
            //if (App.Context.UserToken?.Token != null)
            //{
            //    GraphClient = new GraphServiceClient(new DelegateAuthenticationProvider((request) =>
            //    {
            //        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", App.Context.UserToken.Token);
            //        return Task.CompletedTask;
            //    }));
            //}
            var result = await GraphClient.Me.Request().GetAsync();
            UserName = result.DisplayName;
        }
    }
}